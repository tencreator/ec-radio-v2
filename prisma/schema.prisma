generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model permissions {
  id          Int      @id @default(autoincrement())
  roleid      String
  permissions String   @db.Text

  @@map("Permissions")
}

model policies {
  id          Int      @id @default(autoincrement())
  name        String
  text        String   @db.Text  

  @@map("Policies")
}

model timetable {
  id          Int      @id @default(autoincrement())
  date        String   @db.Text
  time        String   @db.Text
  userid      String

  @@map("Timetable")
}

model timetablelogs {
  id          Int      @id @default(autoincrement())
  date        String   @db.Text
  time        String   @db.Text
  userid      String
  action      String
  processedAt DateTime @default(now())

  @@map("TimetableLogs")
}

model djaccounts {
  id          Int      @id @default(autoincrement())
  azuraid     String
  discordid   String
  name        String
  password    String

  @@map("DJAccounts")
}

model requests {
  id          Int      @id @default(autoincrement())
  date        DateTime

  type        String
  name        String
  message     String   @db.Text

  pending     Boolean  @default(true)
  accepted    Boolean  @default(false)
  processedBy String?  
  processedAt DateTime?
  ip          String
  @@map("Requests")
}

model bannedReqIps {
  id          Int      @id @default(autoincrement())
  ip          String
  banned      Boolean
  bannedBy    String
  bannedAt    DateTime

  @@map("BannedReqIps")
}

model siteSettings {
  id          Int      @id @default(autoincrement())
  reqOpen     Boolean  @default(true)

  @@map("SiteSettings")
}

model resources {
  id          Int      @id @default(autoincrement())
  name        String
  tags        String  @db.Text
  url         String  @db.Text
}

model webhookChannels {
  id          Int     @id @default(autoincrement())
  songchanged String  @db.Text
  listenerStats String  @db.Text
  djConnected String  @db.Text
  djDisconnected String  @db.Text
  stationDown String  @db.Text
  stationUp   String  @db.Text
}

model songLogs {
  id          Int      @id @default(autoincrement())
  date        DateTime
  title       String
  artist      String
  art         String
  album       String
  explicit    Boolean
  listeners   Int
  streamer    String

  @@map("SongLogs")
}

model connectionLogs {
  id          Int      @id @default(autoincrement())
  date        DateTime
  userid      String
  action      String

  @@map("ConnectionLogs")
}

model listenerStats {
  id          Int      @id @default(autoincrement())
  date        String   @db.Text
  maxListeners Int
  minListeners Int
  avgListeners Int

  @@map("ListenerStats")
}

model listenerLogs {
  id          Int      @id @default(autoincrement())
  date        DateTime
  listeners   Int
  currentStreamer String @db.Text

  @@map("ListenerLogs")
}